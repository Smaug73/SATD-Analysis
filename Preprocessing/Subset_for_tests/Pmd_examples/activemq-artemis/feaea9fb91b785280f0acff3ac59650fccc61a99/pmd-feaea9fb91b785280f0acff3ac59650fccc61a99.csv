"Problem","Package","File","Priority","Line","Description","Rule set","Rule"
"1","org.proton.plug.test.minimalclient","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/AMQPClientSPI.java","3","56","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"2","org.proton.plug.test.minimalclient","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/AMQPClientSPI.java","3","92","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","org.proton.plug.context","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/AbstractConnectionContext.java","3","164","Useless qualified this usage in the same class.","Code Style","UselessQualifiedThis"
"2","org.proton.plug.context","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/AbstractConnectionContext.java","4","207","Useless parentheses.","Code Style","UselessParentheses"
"3","org.proton.plug.context","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/AbstractConnectionContext.java","4","213","Useless parentheses.","Code Style","UselessParentheses"
"4","org.proton.plug.context","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/AbstractConnectionContext.java","3","246","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","org.proton.plug.test","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/AbstractJMSTest.java","2","56","Do not explicitly trigger a garbage collection.","Error Prone","DoNotCallGarbageCollectionExplicitly"
"1","org.proton.plug.util","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ByteUtil.java","3","23","All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.","Design","UseUtilityClass"
"1","org.proton.plug.test.minimalserver","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/MinimalConnectionSPI.java","3","120","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","org.proton.plug.handler.impl","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonHandlerImpl.java","3","68","Avoid using implementation types like 'ArrayList'; use the interface instead","Best Practices","LooseCoupling"
"2","org.proton.plug.handler.impl","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonHandlerImpl.java","2","82","Use of modifier volatile is not recommended.","Multithreading","AvoidUsingVolatile"
"3","org.proton.plug.handler.impl","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonHandlerImpl.java","3","181","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","org.proton.plug.test.invm","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonINVMSPI.java","3","119","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"2","org.proton.plug.test.invm","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonINVMSPI.java","3","164","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerReceiverContext.java","3","42","This final field could be made static","Design","FinalFieldCouldBeStatic"
"2","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerReceiverContext.java","3","52","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerReceiverContext.java","3","87","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"4","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerReceiverContext.java","4","105","Useless parentheses.","Code Style","UselessParentheses"
"1","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","56","Avoid unused private fields such as 'SELECTOR'.","Best Practices","UnusedPrivateField"
"2","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","97","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"3","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","4","155","Unnecessary use of fully qualified name 'org.apache.qpid.proton.amqp.messaging.Source' due to existing import 'org.apache.qpid.proton.amqp.messaging.Source'","Code Style","UnnecessaryFullyQualifiedName"
"4","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","178","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"5","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","206","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"6","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","234","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"7","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","256","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"8","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","284","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"9","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","304","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"10","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","312","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"11","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","320","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"12","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","334","Avoid empty if statements","Error Prone","EmptyIfStmt"
"13","org.proton.plug.context.server","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonServerSenderContext.java","3","361","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","org.proton.plug.context","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonTransactionHandler.java","4","59","Useless parentheses.","Code Style","UselessParentheses"
"2","org.proton.plug.context","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonTransactionHandler.java","3","87","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"3","org.proton.plug.context","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonTransactionHandler.java","3","95","New exception is thrown in catch block, original stack trace may be lost","Best Practices","PreserveStackTrace"
"4","org.proton.plug.context","/home/mcs001/febert/satd-repair/apache-commits/activemq-artemis/feaea9fb91b785280f0acff3ac59650fccc61a99/ProtonTransactionHandler.java","3","117","Document empty method body","Documentation","UncommentedEmptyMethodBody"
